From 1a681e1f94c31c0956a176bd4cd8434d67c8ea21 Mon Sep 17 00:00:00 2001
From: srsampson <coupaydeville@gmail.com>
Date: Mon, 8 Nov 2021 15:13:57 -0600
Subject: [PATCH 45/53] Use malloc versus alloca in fsk utilities

---
 src/fmfsk.c              |  4 +++-
 src/fmfsk_demod.c        | 16 +++++++++++-----
 src/fmfsk_mod.c          | 17 +++++++++++------
 src/freedv_fsk.c         | 22 ++++++++++++++--------
 unittest/test_700c_eq.sh |  4 ++--
 5 files changed, 41 insertions(+), 22 deletions(-)

--- a/src/fmfsk.c
+++ b/src/fmfsk.c
@@ -198,7 +198,7 @@
     memcpy (&oldsamps[nold], &fmfsk_in[0]        , sizeof(float)*nin );
     
     /* Allocate memory for filtering */
-    float *rx_filt = alloca(sizeof(float)*(nsym+1)*Ts);
+    float *rx_filt = malloc(sizeof(float)*(nsym+1)*Ts);
     
     /* Integrate over Ts input symbols at every offset */
     for(i=0; i<(nsym+1)*Ts; i++){
@@ -368,4 +368,6 @@
  
     modem_probe_samp_f("t_norm_rx_timing",&norm_rx_timing,1);
     modem_probe_samp_f("t_rx_filt",rx_filt,(nsym+1)*Ts);
+
+    free(rx_filt);
 }
--- a/src/fmfsk_demod.c
+++ b/src/fmfsk_demod.c
@@ -28,6 +28,7 @@
 */
 
 #include <stdio.h>
+#include <stdlib.h>
 #include <string.h>
 #include "fmfsk.h"
 #include "modem_stats.h"
@@ -85,13 +86,13 @@
     
     if(fin==NULL || fout==NULL || fmfsk==NULL){
         fprintf(stderr,"Couldn't open test vector files\n");
-        goto cleanup;
+        exit(1);
     }
     
     /* allocate buffers for processing */
-    bitbuf = (uint8_t*)alloca(sizeof(uint8_t)*fmfsk->nbit);
-    rawbuf = (int16_t*)alloca(sizeof(int16_t)*(fmfsk->N+fmfsk->Ts*2));
-    modbuf = (float*)alloca(sizeof(float)*(fmfsk->N+fmfsk->Ts*2));
+    bitbuf = (uint8_t*)malloc(sizeof(uint8_t)*fmfsk->nbit);
+    rawbuf = (int16_t*)malloc(sizeof(int16_t)*(fmfsk->N+fmfsk->Ts*2));
+    modbuf = (float*)malloc(sizeof(float)*(fmfsk->N+fmfsk->Ts*2));
     
     /* Demodulate! */
     while( fread(rawbuf,sizeof(int16_t),fmfsk_nin(fmfsk),fin) == fmfsk_nin(fmfsk) ){
@@ -135,10 +136,15 @@
     }
     
     modem_probe_close();
-    cleanup:
+
+    free(modbuf);
+    free(rawbuf);
+    free(bitbuf);
+
     fclose(fin);
     fclose(fout);
     fmfsk_destroy(fmfsk);
+
     exit(0);
 }
 
--- a/src/fmfsk_mod.c
+++ b/src/fmfsk_mod.c
@@ -70,13 +70,13 @@
     
     if(fin==NULL || fout==NULL || fmfsk==NULL){
         fprintf(stderr,"Couldn't open test vector files\n");
-        goto cleanup;
+        exit(1);
     }
     
     /* allocate buffers for processing */
-    bitbuf = (uint8_t*)alloca(sizeof(uint8_t)*fmfsk->nbit);
-    rawbuf = (int16_t*)alloca(sizeof(int16_t)*fmfsk->N);
-    modbuf = (float*)alloca(sizeof(float)*fmfsk->N);
+    bitbuf = (uint8_t*)malloc(sizeof(uint8_t)*fmfsk->nbit);
+    rawbuf = (int16_t*)malloc(sizeof(int16_t)*fmfsk->N);
+    modbuf = (float*)malloc(sizeof(float)*fmfsk->N);
     
     /* Modulate! */
     while( fread(bitbuf,sizeof(uint8_t),fmfsk->nbit,fin) == fmfsk->nbit ){
@@ -91,9 +91,14 @@
 	}
     }
     
-    cleanup:
+    free(modbuf);
+    free(rawbuf);
+    free(bitbuf);
+
+    fmfsk_destroy(fmfsk);
+
     fclose(fin);
     fclose(fout);
-    fmfsk_destroy(fmfsk);
+
     exit(0);
 }
--- a/src/freedv_fsk.c
+++ b/src/freedv_fsk.c
@@ -145,8 +145,8 @@
 
     f->bits_per_modem_frame = f->ldpc->data_bits_per_frame;
     int bits_per_frame = f->ldpc->coded_bits_per_frame + sizeof(fsk_ldpc_uw);
-    f->tx_payload_bits = malloc(f->bits_per_modem_frame); assert(f->tx_payload_bits != NULL);
-    f->rx_payload_bits = malloc(f->bits_per_modem_frame); assert(f->rx_payload_bits != NULL);
+    f->tx_payload_bits = MALLOC(f->bits_per_modem_frame); assert(f->tx_payload_bits != NULL);
+    f->rx_payload_bits = MALLOC(f->bits_per_modem_frame); assert(f->rx_payload_bits != NULL);
 
     /* sample buffer size for tx modem samples, we modulate a full frame */
     f->n_nom_modem_samples = f->fsk->Ts*(bits_per_frame/(f->fsk->mode>>1));
@@ -163,12 +163,12 @@
 
     /* deframer set up */
     f->frame_llr_size = 2*bits_per_frame;
-    f->frame_llr = (float*)malloc(f->frame_llr_size*sizeof(float)); assert(f->frame_llr != NULL);
+    f->frame_llr = (float*)MALLOC(f->frame_llr_size*sizeof(float)); assert(f->frame_llr != NULL);
     f->frame_llr_nbits = 0;
 
-    f->twoframes_hard = malloc(2*bits_per_frame); assert(f->twoframes_hard != NULL);
+    f->twoframes_hard = MALLOC(2*bits_per_frame); assert(f->twoframes_hard != NULL);
     memset(f->twoframes_hard, 0, 2*bits_per_frame);
-    f->twoframes_llr = (float*)malloc(2*bits_per_frame*sizeof(float)); assert(f->twoframes_llr != NULL);
+    f->twoframes_llr = (float*)MALLOC(2*bits_per_frame*sizeof(float)); assert(f->twoframes_llr != NULL);
     for(int i=0; i<2*bits_per_frame; i++) f->twoframes_llr[i] = 0.0;
 
     /* currently configured a simple frame-frame approach */
@@ -227,7 +227,7 @@
     }
 
     /* Allocate floating point buffer for FSK mod */
-    tx_float = alloca(sizeof(float)*f->n_nom_modem_samples);
+    tx_float = MALLOC(sizeof(float)*f->n_nom_modem_samples);
 
     /* do 4fsk mod */
     if(FDV_MODE_ACTIVE( FREEDV_MODE_2400A, f->mode) || FDV_MODE_ACTIVE( FREEDV_MODE_800XA, f->mode)){
@@ -252,6 +252,8 @@
             mod_out[i] = (short)(tx_float[i]*FMFSK_SCALE);
         }
     }
+
+    FREE(tx_float);
 }
 
 /* TX routines for 2400 FSK modes, after codec2 encoding */
@@ -297,7 +299,7 @@
     }
 
     /* Allocate floating point buffer for FSK mod */
-    tx_float = alloca(sizeof(float)*f->n_nom_modem_samples);
+    tx_float = MALLOC(sizeof(float)*f->n_nom_modem_samples);
 
     /* do 4fsk mod */
     if(FDV_MODE_ACTIVE( FREEDV_MODE_2400A, f->mode) || FDV_MODE_ACTIVE( FREEDV_MODE_800XA, f->mode)){
@@ -314,6 +316,8 @@
             mod_out[i].real = (tx_float[i]);
         }
     }
+
+    FREE(tx_float);
 }
 
 /* TX routines for 2400 FSK modes, data channel */
@@ -327,7 +331,7 @@
     	fvhff_frame_data_bits(f->deframer, FREEDV_VHF_FRAME_A,(uint8_t*)(f->tx_bits));
 
     /* Allocate floating point buffer for FSK mod */
-    tx_float = alloca(sizeof(float)*f->n_nom_modem_samples);
+    tx_float = MALLOC(sizeof(float)*f->n_nom_modem_samples);
 
     /* do 4fsk mod */
     if (FDV_MODE_ACTIVE( FREEDV_MODE_2400A, f->mode) || FDV_MODE_ACTIVE( FREEDV_MODE_800XA, f->mode)){
@@ -344,6 +348,8 @@
             mod_out[i] = (short)(tx_float[i]*FMFSK_SCALE);
         }
     }
+
+    FREE(tx_float);
 }
 
 int freedv_tx_fsk_ldpc_bits_per_frame(struct freedv *f) {
--- a/unittest/test_700c_eq.sh
+++ b/unittest/test_700c_eq.sh
@@ -4,9 +4,9 @@
 
 results=$(mktemp)
 
-c2enc 700C ../raw/kristoff.raw /dev/null --var 2> $results
+../build_linux/src/c2enc 700C ../raw/kristoff.raw /dev/null --var 2> $results
 var=$(cat $results | sed -n "s/.*var: \([0-9..]*\) .*/\1/p")
-c2enc 700C ../raw/kristoff.raw /dev/null --var --eq 2> $results
+../build_linux/src/c2enc 700C ../raw/kristoff.raw /dev/null --var --eq 2> $results
 var_eq=$(cat $results | sed -n "s/.*var: \([0-9..]*\) .*/\1/p")
 printf "var: %5.2f var_eq: %5.2f\n" $var $var_eq
 python3 -c "import sys; sys.exit(0) if $var_eq<=$var else sys.exit(1)"
