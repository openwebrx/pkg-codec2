From a223e5f09d1fb271de98064dbfd063e1b64f72c9 Mon Sep 17 00:00:00 2001
From: Mooneer Salem <mooneer@gmail.com>
Date: Tue, 9 Nov 2021 08:24:41 -0800
Subject: [PATCH 46/53] Fix Python 3 exception errors.

---
 stm32/support/hex2dfu.py           | 4 ++--
 stm32/support/intelhex/__init__.py | 8 ++++----
 stm32/support/intelhex/bench.py    | 2 +-
 stm32/support/intelhex/test.py     | 2 +-
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/stm32/support/hex2dfu.py b/stm32/support/hex2dfu.py
index d9597ac7..31e46e83 100755
--- a/stm32/support/hex2dfu.py
+++ b/stm32/support/hex2dfu.py
@@ -39,7 +39,7 @@ def load_hex():
         else:
             ih.loadbin(args.source, args.start_addr)
 
-    except Exception, e:
+    except Exception as e:
         print(e)
         exit(1)
 
@@ -118,7 +118,7 @@ def save_dfu(ih):
     try:
         open(args.target, "wb").write(data)
 
-    except Exception, e:
+    except Exception as e:
         print(e)
         exit(1)
 
diff --git a/stm32/support/intelhex/__init__.py b/stm32/support/intelhex/__init__.py
index 2430a101..92d5f6bc 100644
--- a/stm32/support/intelhex/__init__.py
+++ b/stm32/support/intelhex/__init__.py
@@ -963,7 +963,7 @@ def hex2bin(fin, fout, start=None, end=None, size=None, pad=None):
     """
     try:
         h = IntelHex(fin)
-    except HexReaderError, e:
+    except HexReaderError as e:
         txt = "ERROR: bad HEX file: %s" % str(e)
         print(txt)
         return 1
@@ -985,7 +985,7 @@ def hex2bin(fin, fout, start=None, end=None, size=None, pad=None):
             # using .padding attribute rather than pad argument to function call
             h.padding = pad
         h.tobinfile(fout, start, end)
-    except IOError, e:
+    except IOError as e:
         txt = "ERROR: Could not write to file: %s: %s" % (fout, str(e))
         print(txt)
         return 1
@@ -1005,14 +1005,14 @@ def bin2hex(fin, fout, offset=0):
     h = IntelHex()
     try:
         h.loadbin(fin, offset)
-    except IOError, e:
+    except IOError as e:
         txt = 'ERROR: unable to load bin file:', str(e)
         print(txt)
         return 1
 
     try:
         h.tofile(fout, format='hex')
-    except IOError, e:
+    except IOError as e:
         txt = "ERROR: Could not write to file: %s: %s" % (fout, str(e))
         print(txt)
         return 1
diff --git a/stm32/support/intelhex/bench.py b/stm32/support/intelhex/bench.py
index 9195a640..f4d1cbfd 100644
--- a/stm32/support/intelhex/bench.py
+++ b/stm32/support/intelhex/bench.py
@@ -258,7 +258,7 @@ def main(argv=None):
 
         if args:
             raise getopt.GetoptError('Arguments are not used.')
-    except getopt.GetoptError, msg:
+    except getopt.GetoptError as msg:
         txt = str(msg)
         print(txt)
         return 1
diff --git a/stm32/support/intelhex/test.py b/stm32/support/intelhex/test.py
index e34e09ba..704c0df9 100644
--- a/stm32/support/intelhex/test.py
+++ b/stm32/support/intelhex/test.py
@@ -376,7 +376,7 @@ class TestIntelHexBase(unittest.TestCase):
         """
         try:
             callableObj(*args, **kwargs)
-        except excClass, exc:
+        except excClass as exc:
             excMsg = str(exc)
             if not msg:
                 # No message provided: any message is fine.
-- 
2.30.2

