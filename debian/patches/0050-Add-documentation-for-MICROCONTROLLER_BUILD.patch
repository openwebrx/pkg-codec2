From a4787b6c29b6d9b7379a06fc387cd543644441ee Mon Sep 17 00:00:00 2001
From: Mooneer Salem <mooneer@gmail.com>
Date: Sat, 13 Nov 2021 08:59:13 -0800
Subject: [PATCH 50/53] Add documentation for MICROCONTROLLER_BUILD.

---
 README.md | 37 +++++++++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)

diff --git a/README.md b/README.md
index 2730cc66..2127a4cd 100644
--- a/README.md
+++ b/README.md
@@ -236,6 +236,43 @@ Codec 2 can be added to the project in the following way.
      
 1. Add Codec 2 to the target_link_libraries in the same file.
 
+## Building Codec 2 for microcontrollers
+
+Codec 2 can be run on certain microcontrollers (such as the IMRT1052 used in Teensy 4/4.1). This requires the 
+MICROCONTROLLER_BUILD option to be set in CMake during configuration in order to properly set compiler arguments.
+Additionally, defines should be added for the FreeDV/Codec2 modes to enable. If on ARM, using __EMBEDDED__ and
+also including the ARM CMSIS library will improve performance on ARM-based microcontrollers.
+
+A CMakeLists.txt example for a microcontroller is below:
+
+```
+set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
+set(MICROCONTROLLER_BUILD 1)
+
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mlittle-endian -ffunction-sections -fdata-sections -g -O3")
+set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -ffunction-sections -fdata-sections")
+
+add_definitions(-DCORTEX_M7 -D__EMBEDDED__)
+add_definitions(-DFREEDV_MODE_EN_DEFAULT=0 -DFREEDV_MODE_1600_EN=1 -DFREEDV_MODE_700D_EN=1 -DFREEDV_MODE_700E_EN=1 -DCODEC2_MODE_EN_DEFAULT=0 -DCODEC2_MODE_1300_EN=1 -DCODEC2_MODE_700C_EN=1)
+                    
+FetchContent_Declare(codec2
+    GIT_REPOSITORY https://github.com/drowe67/codec2.git
+    GIT_TAG origin/master
+    GIT_SHALLOW ON
+    GIT_PROGRESS ON
+)
+FetchContent_GetProperties(codec2)
+if(NOT ${codec2_POPULATED})
+    FetchContent_Populate(codec2)
+endif()
+set(CMAKE_REQUIRED_FLAGS "")
+
+set(LPCNET OFF CACHE BOOL "")
+add_subdirectory(${codec2_SOURCE_DIR} ${codec2_BINARY_DIR} EXCLUDE_FROM_ALL)
+```
+
+*Note: Codec 2 relies extensively on single-precision floating point. Use on a device without a FPU is thus not advised as performance will be degraded.*
+
 ## Building Debian packages
 
 To build Debian packages, simply run the "cpack" command after running "make". This will generate the following packages:
-- 
2.30.2

